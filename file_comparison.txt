=== 文件详细对比表 ===


文件: asktellcmaes.py
行数: 165
类数: 1
函数数: 1
导入数: 6

内容预览:
"""Ask and tell interface to the Modular CMA-ES."""
import warnings
import typing
from collections import deque
from functools import wraps
import numpy as np
from .modularcmaes import ModularCMAES


def check_break_conditions(f: typing.Callable) -> typing.Callable:
    """Decorator function, checks for break conditions for the ~AskTellCMAES.

    Raises a StopIteration if break_conditions are met for ~AskTellCMAES.

    Parameters
    ----------
    f: callable
        A method on ~AskTellCMAES...

==================================================

文件: modularcmaes.py
行数: 551
类数: 1
函数数: 5
导入数: 8

内容预览:
"""Main implementation of Modular CMA-ES."""
from inspect import Parameter
import os
from itertools import islice
from typing import List, Callable

import numpy as np

from .parameters import Parameters
from .population import Population
from .utils import timeit, ert


class ModularCMAES:
    r"""The main class of the configurable CMA ES continous optimizer.

    Attributes
    ----------
    _fitness_func: callable
        The objective function to be optimized
    parameters: Parameters
    ...

==================================================

文件: parameters.py
行数: 929
类数: 2
函数数: 0
导入数: 9

内容预览:
"""Definition of Parameters objects, which are used by ModularCMA-ES."""
import os
import pickle
import warnings
from collections import deque
from typing import Generator, TypeVar

import numpy as np
from scipy import linalg

from .utils import AnnotatedStruct
from .sampling import (
    gaussian_sampling,
    orthogonal_sampling,
    mirrored_sampling,
    sobol_sampling,
    halton_sampling,
    Sobol, 
    Halton
)


class Parameters(AnnotatedStruct):
    """AnnotatedStruct object for holdin...

==================================================

文件: population.py
行数: 125
类数: 1
函数数: 0
导入数: 2

内容预览:
"""TImplemention for the Population object used in the ModularCMA-ES."""
from typing import Any
import numpy as np


class Population:
    """Object for holding a Population of individuals."""

    def __init__(self, x, y, z, f, s=None):
        """Reshape x and y."""
        self.x = x
        self.y = y
        self.z = z
        self.f = f
        self.s = np.empty(self.f.shape) if s is None else s
        if len(self.x.shape) == 1:
            self.x = self.x.reshape(-1, 1)
            self....

==================================================

文件: sampling.py
行数: 168
类数: 3
函数数: 5
导入数: 4

内容预览:
"""Module implementing various samplers."""
from typing import Generator
from collections.abc import Iterator

import numpy as np
from scipy import stats


class QmcSampler(Iterator):
    """Wrapper around scipy.stats.qmc quasi random samplers."""

    def __init__(self, qmc: stats.qmc.QMCEngine):
        """Intialize qmc wrapper.

        Parameters
        ----------
        qmc :stats.qmc.QMCEngine
            Any of the samplers defined in scipy.stats.qmc module

        """
        self.qmc...

==================================================

文件: utils.py
行数: 261
类数: 5
函数数: 2
导入数: 6

内容预览:
"""Implementation of various utilities used in ModularCMA-ES package."""

import warnings
import typing
from inspect import Signature, Parameter, getmodule
from functools import wraps
from time import time

import numpy as np


class Descriptor:
    """Data descriptor."""

    def __set_name__(self, owner, name):
        """Set name attribute."""
        self.name = name

    def __set__(self, instance, value):
        """Set value on instance."""
        instance.__dict__[self.name] = value

  ...

==================================================

文件: __init__.py
行数: 36
类数: 0
函数数: 0
导入数: 6

内容预览:
"""Entrypoint of Modular CMA-ES package."""

from .parameters import Parameters, BIPOPParameters
from .population import Population
from .sampling import (
    gaussian_sampling,
    sobol_sampling,
    halton_sampling,
    mirrored_sampling,
    orthogonal_sampling,
    Halton,
    Sobol,
)
from .utils import timeit, ert
from .asktellcmaes import AskTellCMAES
from .modularcmaes import ModularCMAES, evaluate_bbob, fmin

__all__ = (
    "AskTellCMAES",
    "ModularCMAES",
    "evaluate_bbob",
   ...

==================================================

文件: __main__.py
行数: 38
类数: 0
函数数: 0
导入数: 2

内容预览:
"""Allows the user to call the library as a cli-module."""

from argparse import ArgumentParser

from .modularcmaes import evaluate_bbob


parser = ArgumentParser(description="Run single function CMAES")
parser.add_argument(
    "-f", "--fid", type=int, help="bbob function id", required=False, default=5
)
parser.add_argument(
    "-d", "--dim", type=int, help="dimension", required=False, default=5
)
parser.add_argument(
    "-i",
    "--iterations",
    type=int,
    help="number of iterations p...

==================================================
